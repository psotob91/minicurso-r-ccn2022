---
title: "<FONT color='#A7D5E8'>Sesión 2: Visualización de datos con ggplot2</FONT>"
subtitle: "<FONT color='#E9AFA3' size='10'>Curso: Introducción al software R para Ciencia de Datos en Salud <br> XXXVI CCN Huancayo - SOCIMEP 2022</FONT>"
author: "<FONT color='#FFFFFF' size='30'>Percy Soto-Becerra M.D., M.Sc(c)</FONT>"
institute: "<FONT color='#FFFFFF' size='5'>Investigador Externo, Universidad Continental, Huancayo<br>@github/psotob91</FONT>"
date: "<FONT color='#FFFFFF' size='6'>Agosto 11, 2022</FONT>"

format: 
  revealjs:
    self-contained: true
    theme: [simple, theme/theme.scss]
    footer: "Introducción a R y RStudio"
    slide-number: c/t
    logo: img/logo.png
    width: 1920
    height: 1080
    highlight-style: ayu-dark
    self-contained-math: true
from: markdown+emoji
execute:
  echo: true
---

```{r}
#| label: setup
#| include: false
library(fontawesome)
library(tidyverse)
library(gt)
library(gtExtras)
library(gtsummary)
library(showtext)
library(kableExtra)

## Ver QUARTO RSTUDIO CONFERENCE: https://github.com/rstudio-conf-2022/get-started-quarto/blob/main/materials/02-authoring.qmd
## 
## blackboard theme: https://github.com/schochastics/quarto-blackboard-theme
## 
## https://github.com/schochastics/xaringan-themes
```

--- 

# Visualización de datos

---

## Visualización de datos

<br/>

>"The simple graph has brought more information to the data analyst's mind than any other device." --- John Tukey

- La visualización de datos es la creación y el estudio de la representación visual de los datos.

- Muchas herramientas para visualizar datos, R es una de ellas.

- Muchos enfoques/sistemas dentro de R para hacer visualizaciones de datos

    + [ggplot2]{.hl} es uno de ellos, y eso es lo que vamos a usar

---

## {ggplot2} es un paquete de {tidyverse}

:::: columns

::: {.column width="50%"}

```{r echo=FALSE, out.width="80%"}
knitr::include_graphics("img/ggplot2-part-of-tidyverse.png")
```

:::

::: {.column width="50%"}

- [ggplot2]{.hl} es el paquete de visualización de datos de tidyverse.

- [gg]{.plo} en [ggplot2]{.hl} significa Gramática de gráficos.

- Inspirado en el libro [Grammar of Graphics]{.plo} de Leland Wilkinson

:::
::::

---

## Gramática de gráficos

:::: columns

::: {.column width="50%"}

- Una gramática de gráficos es una herramienta que nos permite describir de manera concisa los componentes de un gráfico.

:::

::: {.column width="50%"}

```{r echo=FALSE, out.width="100%"}
knitr::include_graphics("img/grammar-of-graphics.png")
```

:::

::::

--- 

# Primeros pasos con ggplot2

---

## Aspectos básicos de ggplot2

<br/>

- Estructura de código para generar gráficos en ggplot2

```r
ggplot(data = [dataset], 
       mapping = aes(x = [x-variable], 
                     y = [y-variable])) +
   geom_xxx() +
   other options
```

--- 

## Datos: gapminder

<br/>

- Data disponible en paquete {dslabs}.

```{r}
library(dslabs)
data(gapminder, package = "dslabs") 
```


- Veamos un resumen de estos datos:

```{r}
head(gapminder)
```

- Veamos el detalle

```r
?gapminder
```

--- 

# Código paso a paso

## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder)
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder)
```

:::
::::

## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, [mapea year a x]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year))
```

:::
::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year))
```

:::
::::

## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, mapea year a x y [mapea life_expectancy a y]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy))
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy))
```

:::
::::

## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, mapea year a x y mapea life_expectancy a y. [Representa cada información con un punto]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy)) + 
  geom_point()
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy)) + 
  geom_point()
```

:::
::::

## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, mapea year a x y mapea life_expectancy a y. Representa cada información con un punto. [Mapea continent al color de los puntos]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point()
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point()
```

:::
::::

## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, mapea year a x y mapea life_expectancy a y. Representa cada información con un punto. Mapea continent al color de los puntos. [Titula el gráfico como "Esperanza de vida a lo largo del tiempo"]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo")
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year,  
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo")
```

:::
::::

## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, mapea year a x y mapea life_expectancy a y. Representa cada información con un punto. Mapea continent al color de los puntos. Titula el gráfico como "Esperanza de vida a lo largo del tiempo" [y agrega el subtitulo "Datos para Africa, Americas, Asia, Europa y Oceania"]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania")
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania")
```

:::
::::

## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, mapea year a x y mapea life_expectancy a y. Representa cada información con un punto. Mapea continent al color de los puntos. Titula el gráfico como "Esperanza de vida a lo largo del tiempo" y agrega el subtitulo "Datos para Africa, Americas, Asia, Europa y Oceania".. [Etiqueta los ejes x e y como "Año" y "Esperanza de Vida", respectivamente]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida")
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida")
```

:::
::::


## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, mapea year a x y mapea life_expectancy a y. Representa cada información con un punto. Mapea continent al color de los puntos. Titula el gráfico como "Esperanza de vida a lo largo del tiempo" y agrega el subtitulo "Datos para Africa, Americas, Asia, Europa y Oceania". Etiqueta los ejes x e y como "Año" y "Esperanza de Vida", respectivamente. [Etiqueta la leyenda como "Continentes"]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida", 
       colour = "Continentes")
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida", 
       colour = "Continentes")
```

:::
::::


## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, mapea year a x y mapea life_expectancy a y. Representa cada información con un punto. Mapea continent al color de los puntos. Titula el gráfico como "Esperanza de vida a lo largo del tiempo" y agrega el subtitulo "Datos para Africa, Americas, Asia, Europa y Oceania". Etiqueta los ejes x e y como "Año" y "Esperanza de Vida", respectivamente. Etiqueta la leyenda como "Continentes"  [y agrega un titulo para la fuente de datos]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida", 
       colour = "Continentes", 
       caption = "Fuente: Gapminder data")
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida", 
       colour = "Continentes", 
       caption = "Fuente: Gapminder data")
```

:::
::::


## {auto-animate="true"}

>Inicia con el data.frame [gapminder]{.plo}, mapea year a x y mapea life_expectancy a y. Representa cada información con un punto. Mapea continent al color de los puntos. Titula el gráfico como "Esperanza de vida a lo largo del tiempo" y agrega el subtitulo "Datos para Africa, Americas, Asia, Europa y Oceania". Etiqueta los ejes x e y como "Año" y "Esperanza de Vida", respectivamente. Etiqueta la leyenda como "Continentes"  [y agrega un titulo para la fuente de datos. [Finalmente, usa una escala de colores discreta que esté diseñada para preservar la visualización de personas con formas comunes discapacidad visual para los colores]{.hl}

:::: columns
::: {.column width='50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida", 
       colour = "Continentes", 
       caption = "Fuente: Gapminder data") + 
  scale_colour_viridis_d()
```

:::

::: {.column width='50%'}

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida", 
       colour = "Continentes", 
       caption = "Fuente: Gapminder data") + 
  scale_colour_viridis_d()
```

:::
::::

--- 

## En resumen

::: {.panel-tabset}

### Gráfico

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida", 
       colour = "Continentes", 
       caption = "Fuente: Gapminder data") + 
  scale_colour_viridis_d()
```

### Código

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "Esperanza de vida a lo largo del tiempo", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Año", y = "Esperanza de Vida", 
       colour = "Continentes", 
       caption = "Fuente: Gapminder data") + 
  scale_colour_viridis_d()
```

### Narrativa

Inicia con el data.frame [gapminder]{.plo}, mapea year a x y mapea life_expectancy a y.

Representa cada información con un punto. 

Mapea continent al color de los puntos. 

Titula el gráfico como "Esperanza de vida a lo largo del tiempo" y agrega el subtitulo "Datos para Africa, Americas, Asia, Europa y Oceania". 

Etiqueta los ejes x e y como "Año" y "Esperanza de Vida", respectivamente. 

Etiqueta la leyenda como "Continentes"  [y agrega un titulo para la fuente de datos. 

Finalmente, usa una escala de colores discreta que esté diseñada para preservar la visualización de personas con formas comunes discapacidad visual para los colores.

:::


---

## Nombre de argumentos

<br/>

>Se puede omitir los nombres de los dos primeros argumentos cuando construimos gráficos con [ggplot2]{.plo}.

:::: columns

::: {.column width = '50%'}

```r
ggplot(data = gapminder, 
       mapping = aes(x = gdp, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

::: 

::: {.column width = '50%'}

```     r
ggplot(gapminder, 
       aes(x = gdp, 
           y = life_expectancy, 
           colour = continent)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

::: 

::::

--- 

## Transformar variables para mejorar visualización

>Se puede realizar transformaciones sobre la marcha de las variables en los gráficos de [ggplot2]{.plo}

:::: columns

::: {.column width = '50%'}

```{r}
ggplot(data = gapminder, 
       mapping = aes(x = gdp, 
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "PBI y esperanza de vida", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Producto Bruto Interno", 
       y = "Esperanza de Vida", 
       colour = "Continentes", 
       caption = "Fuente: Gapminder data") + 
  scale_colour_viridis_d()
```

::: 

::: {.column width = '50%'}

```{r}
ggplot(data = gapminder, 
       mapping = aes(x = log(gdp), #< Ponemos log()
                     y = life_expectancy, 
                     colour = continent)) + 
  geom_point() + 
  labs(title = "PBI y esperanza de vida", 
       subtitle = "Datos para Africa, Americas, Asia, Europa y Oceania", 
       x = "Logaritmo de Producto Bruto Interno", #< Editamos nombre
       y = "Esperanza de Vida", 
       colour = "Continentes", 
       caption = "Fuente: Gapminder data") + 
  scale_colour_viridis_d()
```

::: 

::::


--- 

# Estéticas

--- 

## Opciones de estéticas

<br/>

Las características comunmente usadas en los gráficos que pueden ser mapeadas a variables específicas en los datos:

- color

- forma

- tamaño

- alfa (transparencia)

--- 

## Color

```{r}
#| echo: false
gapminder2 <- 
  gapminder %>% 
  group_by(year, continent, region) %>% 
  summarize(
    life_expectancy_mean = mean(life_expectancy, na.rm = TRUE), 
    infant_mortality_mean = mean(infant_mortality, na.rm = TRUE), 
    population_total = sum(population, na.rm = TRUE)
    )
```

:::: columns

::: {.column width = '50%'}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|4"
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::: {.column width = '50%'}

```{r}
#| echo: false
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::::

--- 

## Forma

- Forma mapeda a variable adicional

:::: columns

::: {.column width = '50%'}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|5"
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = region)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::: {.column width = '50%'}

```{r}
#| echo: false
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = region)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::::


--- 

## Forma

- Forma mapeda a la misma variable

:::: columns

::: {.column width = '50%'}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|5"
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = continent)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::: {.column width = '50%'}

```{r}
#| echo: false
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = continent)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::::

---

## Tamaño 

:::: columns

::: {.column width = '50%'}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|6"
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = continent, 
                     size = population_total)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::: {.column width = '50%'}

```{r}
#| echo: false
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = continent, 
                     size = population_total)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::::


---

## Alfa 


:::: columns

::: {.column width = '50%'}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|7"
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = continent, 
                     size = population_total, 
                     alpha = population_total)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::: {.column width = '50%'}

```{r}
#| echo: false
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = continent, 
                     size = population_total, 
                     alpha = population_total)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::::


--- 

## Mapping vs. Setting


:::: columns

::: {.column width = '50%'}

### Mapping

```{r}
#| echo: true
#| code-line-numbers: "|6,7"
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = continent, 
                     size = population_total, 
                     alpha = population_total)) + 
  geom_point() + 
  scale_colour_viridis_d()
```

:::

::: {.column width = '50%'}

### Setting

```{r}
#| echo: true
#| code-line-numbers: "|6"
ggplot(data = gapminder2, 
       mapping = aes(x = year, 
                     y = life_expectancy_mean, 
                     colour = continent, 
                     shape = continent)) + 
  geom_point(size = 2, alpha = 0.5) + 
  scale_colour_viridis_d()
```

:::

::::

--- 

## Mapping vs. Setting

<br/>

- [Mapping:]{.hl} Determina el tamaño, alfa, etc. de los puntos basados en el valor de un variable en los datos:

    + Se configura como: [aes()]{.plo}
    
- [Mapping:]{.hl} Determina el tamaño, alfa, etc. de los puntos SIN basarse en el valor de un variable en los datos:

    + Se configura como: [geom_*]{.plo} (en este caso fue [geom_point]{.plo}, pero hay otras geometrías más)
    
---

# Faceting

<br/> 

- Puntos pequeños pueden mostrar diferentes subconjuntos de los datos.

- Útil para explorar relaciones condicionales y grandes datos

---

## Faceting {.scrollable}

```{r}
#| echo: false
gapminder3 <- gapminder %>% 
  filter(continent %in% c("Europe", "Africa"))
```


::: {.panel-tabset}

### Código

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy)) + 
  geom_point() + 
  facet_grid(continent) + 
  scale_colour_viridis_d()
```

### Gráfico

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy)) + 
  geom_point() + 
  facet_grid(. ~ continent) + 
  scale_colour_viridis_d()
```

:::

--- 

## Varias formas de faceting

  
::: {.panel-tabset}

### Código

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy)) + 
  geom_point() + 
  facet_grid(continent ~ .) + 
  scale_colour_viridis_d()
```

### Gráfico

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy)) + 
  geom_point() + 
  facet_grid(continent ~ .) + 
  scale_colour_viridis_d()
```

:::

--- 

## Varias formas de faceting

  
::: {.panel-tabset}

### Código

```r
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy)) + 
  geom_point() + 
  facet_wrap(~ continent) + 
  scale_colour_viridis_d()
```

### Gráfico

```{r}
#| echo: false
#| fig-align: center
ggplot(data = gapminder, 
       mapping = aes(x = year, 
                     y = life_expectancy)) + 
  geom_point() + 
  facet_wrap(~ continent) + 
  scale_colour_viridis_d()
```

:::

--- 

<br/><br/><br/><br/><br/>
<center>[Preguntas?]{.big-text6}</center>

--- 

<br/><br/><br/><br/><br/>
<center>[Muchas gracias!]{.big-text6}</center>

