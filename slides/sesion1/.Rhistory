library(medicaldata)
data(theoph)
theoph <- theoph %>% as_tibble()
theoph
#| echo: false
theoph <- as.data.frame(theoph)
theoph
class(theoph)
#| echo: false
library(medicaldata)
data(covid_testing)
covid_testing <- covid_testing %>% as_tibble() %>% select(1:3)
covid_testing
#| echo: false
library(medicaldata)
data(covid_testing)
covid_testing <- covid_testing %>% as_tibble() %>% select(1:5)
covid_testing
tipo_vector <- data.frame(
tipo = c("Entero", "Doble", "Caracter", "Lógicos", "Factor"),
tipo_ingles = c("Integer", "Double", "Character", "Logical", "Factor"),
descripción = c("Solo números enteros", "Números", "Texto o cadenas ('strings')", "Verdadero o Falso", "Categorías")
)
tipo_vector <- data.frame(
tipo = c("Entero", "Doble", "Caracter", "Lógicos", "Factor"),
tipo_ingles = c("Integer", "Double", "Character", "Logical", "Factor"),
descripción = c("Solo números enteros", "Números", "Texto o cadenas ('strings')", "Verdadero o Falso", "Categorías")
)
tipo_vector
tipo_vector %>%
gt() %>%
gt_theme_nytimes()
#| echo: false
#| results: asis
tipo_vector %>%
gt() %>%
gt_theme_nytimes()  %>%
tab_header(title = "Tipo de vectores") %>%
as_raw_html()
#| label: setup
#| include: false
library(fontawesome)
library(tidyverse)
library(quarto)
library(gt)
library(gtExtras)
library(gtsummary)
library(showtext)
library(kableExtra)
## Ver QUARTO RSTUDIO CONFERENCE: https://github.com/rstudio-conf-2022/get-started-quarto/blob/main/materials/02-authoring.qmd
##
## blackboard theme: https://github.com/schochastics/quarto-blackboard-theme
##
## https://github.com/schochastics/xaringan-themes
#| echo: false
library(medicaldata)
data(covid_testing)
covid_testing <- covid_testing %>% as_tibble() %>% select(1:5)
covid_testing
class(covid_testing)
#| echo: false
covid_testing <- as.data.frame(covid_testing)
covid_testing
class(covid_testing)
#| echo: false
tipo_vector <- data.frame(
tipo = c("Entero", "Doble", "Caracter", "Lógicos", "Factor"),
tipo_ingles = c("Integer", "Double", "Character", "Logical", "Factor"),
descripción = c("Solo números enteros", "Números", "Texto o cadenas ('strings')", "Verdadero o Falso", "Categorías")
)
#| echo: false
#| results: asis
kbl(tipo_vector) %>%
kable_styling(font_size = 30,
# bootstrap_options = c("striped", "hover", "condensed"),
full_width = T,
position = "center")
#| echo: false
#| results: asis
kbl(tipo_vector) %>%
kable_styling(font_size = 50,
# bootstrap_options = c("striped", "hover", "condensed"),
full_width = T,
position = "center",
htmltable_class = "lightable-minimal")
#| echo: false
tipo_vector <- data.frame(
Tipo = c("Entero", "Doble", "Caracter", "Lógicos", "Factor"),
`Tipo en inglés` = c("Integer", "Double", "Character", "Logical", "Factor"),
Descripción = c("Solo números enteros", "Números", "Texto o cadenas ('strings')", "Verdadero o Falso", "Categorías"),
Ejemplo = c("c(1, 2, 3, 4)", "c(1, 2.4, 3.14, 4)", "c('1', 'azul', 'divertido', 'monstruo')", "c(TRUE, FALSE, TRUE, FALSE)", "c('Muy intenso', 'Leve', 'Moderado', 'Leve')")
)
#| echo: false
#| results: asis
kbl(tipo_vector) %>%
kable_styling(font_size = 50,
# bootstrap_options = c("striped", "hover", "condensed"),
full_width = T,
position = "center",
htmltable_class = "lightable-minimal")
?kbl
#| echo: false
#| results: asis
kbl(tipo_vector,
col.names = c("**Tipo**", "Tipo en ingles", "Descripción", "Ejemplo")) %>%
kable_styling(font_size = 40,
# bootstrap_options = c("striped", "hover", "condensed"),
full_width = T,
position = "center",
htmltable_class = "lightable-minimal")
#| echo: false
#| results: asis
kbl(tipo_vector,
col.names = c("**Tipo**", "Tipo en inglés", "Descripción", "Ejemplo"),
caption = "Tipo de vectores") %>%
kable_styling(font_size = 40,
# bootstrap_options = c("striped", "hover", "condensed"),
full_width = T,
position = "center",
htmltable_class = "lightable-minimal")
#| echo: false
#| results: asis
kbl(tipo_vector,
col.names = c("**Tipo**", "Tipo en inglés", "Descripción", "Ejemplo"),
caption = "Tipo de vectores",
format = "markdown") %>%
kable_styling(font_size = 40,
# bootstrap_options = c("striped", "hover", "condensed"),
full_width = T,
position = "center",
htmltable_class = "lightable-minimal")
#| echo: false
#| fig-align: center
knitr::include_graphics("img/estructuras-r.png")
glimpse(covid_testing)
glimpse(covid_testing)
#| echo: false
library(medicaldata)
data(covid_testing)
glimpse(covid_testing)
?covid_testing
install.packages("rio"
install.packages("rio"
install.packages("rio")
install_formats()
install.packages("rio")
install_formats()
rio::install_formats()
?import
import("maca_meno_perclin.csv")
#| label: setup
#| include: false
library(fontawesome)
library(tidyverse)
library(quarto)
library(gt)
library(gtExtras)
library(gtsummary)
library(showtext)
library(kableExtra)
## Ver QUARTO RSTUDIO CONFERENCE: https://github.com/rstudio-conf-2022/get-started-quarto/blob/main/materials/02-authoring.qmd
##
## blackboard theme: https://github.com/schochastics/quarto-blackboard-theme
##
## https://github.com/schochastics/xaringan-themes
#| echo: false
library(medicaldata)
data(covid_testing)
covid_testing <- covid_testing %>% as_tibble() %>% select(1:5)
covid_testing
class(covid_testing)
#| echo: false
covid_testing <- as.data.frame(covid_testing)
covid_testing
class(covid_testing)
#| echo: false
tipo_vector <- data.frame(
tipo = c("Entero", "Doble", "Caracter", "Lógicos", "Factor"),
tipo_ingles = c("Integer", "Double", "Character", "Logical", "Factor"),
desc = c("Solo números enteros", "Números", "Texto o cadenas ('strings')", "Verdadero o Falso", "Categorías"),
ejem = c("c(1, 2, 3, 4)", "c(1, 2.4, 3.14, 4)", "c('1', 'azul', 'divertido', 'monstruo')", "c(TRUE, FALSE, TRUE, FALSE)", "c('Muy intenso', 'Leve', 'Moderado', 'Leve')")
)
#| echo: false
#| results: asis
kbl(tipo_vector,
col.names = c("<FONT color='#9DA7A7'>Tipo de dato</FONT>", "<FONT color='#9DA7A7'>(En inglés)</FONT>", "<FONT color='#9DA7A7'>Descripción</FONT>", "<FONT color='#9DA7A7'>Ejemplo</FONT>"),
format = "markdown") %>%
kable_styling(font_size = 40,
# bootstrap_options = c("striped", "hover", "condensed"),
full_width = T,
position = "center",
htmltable_class = "lightable-minimal")
#| echo: false
#| fig-align: center
knitr::include_graphics("img/estructuras-r.png")
#| echo: false
library(medicaldata)
data(covid_testing)
glimpse(covid_testing)
nrow(covid_testing)
ncol(covid_testing)
dim(covid_testing)
#| echo: false
#| fig-align: center
#| out-width: 50%
knitr::include_graphics("img/rio-hex.png")
library(rio)
import("maca_meno_perclin.csv")
import("maca_meno_perclin.csv") -> datos
class(datos)
datos_nuevos <- import("maca_meno_perclin.csv")
head(datos_nuevos)
datos_xlsx <- import("maca_meno_perclin.xlsx")
head(datos_xlsx)
datos_dta <- import("maca_meno_fase1.dta")
head(datos_dta)
?import
library(haven)
?read_dta
getwd()
getwd()
datos_dta <- import("maca_meno_fase1.dta")
datos_xlsx <- import("maca_meno_perclin.xlsx")
head(datos_xlsx)
datos_dta <- import("maca_meno_fase1.dta")
head(datos_dta)
head(datos_sav)
datos_sav <- import("RECH0.sav")
head(datos_sav)
#| label: setup
#| include: false
library(fontawesome)
library(tidyverse)
library(quarto)
library(gt)
library(gtExtras)
library(gtsummary)
library(showtext)
## Ver QUARTO RSTUDIO CONFERENCE: https://github.com/rstudio-conf-2022/get-started-quarto/blob/main/materials/02-authoring.qmd
##
## blackboard theme: https://github.com/schochastics/quarto-blackboard-theme
##
## https://github.com/schochastics/xaringan-themes
#| echo: false
#| fig-align: center
#| out.width: 30%
knitr::include_graphics("img/R.png")
#| echo: false
#| fig-align: center
#| out.width: 70%
knitr::include_graphics("img/RStudio.png")
#| echo: false
#| fig-align: center
#| out.width: 100%
knitr::include_graphics("img/r-packages.png")
#| echo: false
#| fig-align: center
#| out.width: 200%
knitr::include_graphics("img/r-rpackages.png")
#| echo: false
#| fig-align: center
#| out.width: 90%
knitr::include_graphics("img/r-rstudio-paq.png")
#| echo: false
#| out.width: 99%
knitr::include_graphics("img/tidyverse.png")
#| echo: false
#| fig-align: center
#| out.width: 90%
knitr::include_graphics("img/r-script.png")
#| echo: false
#| out.width: 60%
#| fig-align: center
knitr::include_graphics("img/rmarkdown.png")
#| echo: false
library(countdown)
countdown_timer <- function(
minutes = 1,
play_sound = TRUE,
font_size = "2em",
...
) {
countdown(
minutes = minutes,
# Fanfare when it's over
play_sound = play_sound,
# Set timer theme to match solarized colors
color_border              = "#404041",
color_text                = "white",
color_background = "#000000",
color_running_background  = "#72994E",
color_running_text        = "white",
color_finished_background = "#EE6331",
color_finished_text       = "white",
font_size = font_size,
...
)
}
#| echo: false
countdown_timer(2)
#| echo: true
3 + 8
#| echo: true
3 - 8
#| echo: true
3 * 8
#| echo: true
3 * 8
#| echo: true
3 ^ 3 # ^ se obtiene mediante: ALT + 94
#| echo: true
sqrt(16)
#| echo: true
8 ^ (1 / 3) # Raíz cúbica
#| echo: true
15 + (64 - 60) ^ (1/2)
#| echo: true
log(12) # log es logaritmo natural o neperiano
#| echo: true
log10(100)
#| echo: true
exp(2)
#| echo: true
pi
#| echo: true
5 > 4
#| echo: true
6 <= 3
#| echo: true
7 == 7
#| echo: true
8 != 5
#| echo: true
library(medicaldata)
data(covid_testing)
?covid_testing
head(covid_testing)
covid_testing$gender
head(covid_testing$age)
genero <- covid_testing$gender
genero
#| echo: false
countdown_timer(3)
#| echo: false
library(medicaldata)
data(covid_testing)
covid_testing <- covid_testing %>% as_tibble() %>% select(1:5)
covid_testing
class(covid_testing)
#| echo: false
covid_testing <- as.data.frame(covid_testing)
covid_testing
class(covid_testing)
#| echo: false
tipo_vector <- data.frame(
tipo = c("Entero", "Doble", "Caracter", "Lógicos", "Factor"),
tipo_ingles = c("Integer", "Double", "Character", "Logical", "Factor"),
desc = c("Solo números enteros", "Números", "Texto o cadenas ('strings')", "Verdadero o Falso", "Categorías"),
ejem = c("c(1, 2, 3, 4)", "c(1, 2.4, 3.14, 4)", "c('1', 'azul', 'divertido', 'monstruo')", "c(TRUE, FALSE, TRUE, FALSE)", "c('Muy intenso', 'Leve', 'Moderado', 'Leve')")
)
#| echo: false
#| results: asis
kbl(tipo_vector,
col.names = c("<FONT color='#9DA7A7'>Tipo de dato</FONT>", "<FONT color='#9DA7A7'>(En inglés)</FONT>", "<FONT color='#9DA7A7'>Descripción</FONT>", "<FONT color='#9DA7A7'>Ejemplo</FONT>"),
format = "markdown") %>%
kable_styling(font_size = 40,
# bootstrap_options = c("striped", "hover", "condensed"),
full_width = T,
position = "center",
htmltable_class = "lightable-minimal")
#| label: setup
#| include: false
library(fontawesome)
library(tidyverse)
library(quarto)
library(gt)
library(gtExtras)
library(gtsummary)
library(showtext)
library(kableExtra)
## Ver QUARTO RSTUDIO CONFERENCE: https://github.com/rstudio-conf-2022/get-started-quarto/blob/main/materials/02-authoring.qmd
##
## blackboard theme: https://github.com/schochastics/quarto-blackboard-theme
##
## https://github.com/schochastics/xaringan-themes
#| echo: false
#| fig-align: center
#| out.width: 30%
knitr::include_graphics("img/R.png")
#| echo: false
#| fig-align: center
#| out.width: 70%
knitr::include_graphics("img/RStudio.png")
#| echo: false
#| fig-align: center
#| out.width: 100%
knitr::include_graphics("img/r-packages.png")
#| echo: false
#| fig-align: center
#| out.width: 200%
knitr::include_graphics("img/r-rpackages.png")
#| echo: false
#| fig-align: center
#| out.width: 90%
knitr::include_graphics("img/r-rstudio-paq.png")
#| echo: false
#| out.width: 99%
knitr::include_graphics("img/tidyverse.png")
#| echo: false
#| fig-align: center
#| out.width: 90%
knitr::include_graphics("img/r-script.png")
#| echo: false
#| out.width: 60%
#| fig-align: center
knitr::include_graphics("img/rmarkdown.png")
#| echo: false
library(countdown)
countdown_timer <- function(
minutes = 1,
play_sound = TRUE,
font_size = "2em",
...
) {
countdown(
minutes = minutes,
# Fanfare when it's over
play_sound = play_sound,
# Set timer theme to match solarized colors
color_border              = "#404041",
color_text                = "white",
color_background = "#000000",
color_running_background  = "#72994E",
color_running_text        = "white",
color_finished_background = "#EE6331",
color_finished_text       = "white",
font_size = font_size,
...
)
}
#| echo: false
countdown_timer(2)
#| echo: true
3 + 8
#| echo: true
3 - 8
#| echo: true
3 * 8
#| echo: true
3 * 8
#| echo: true
3 ^ 3 # ^ se obtiene mediante: ALT + 94
#| echo: true
sqrt(16)
#| echo: true
8 ^ (1 / 3) # Raíz cúbica
#| echo: true
15 + (64 - 60) ^ (1/2)
#| echo: true
log(12) # log es logaritmo natural o neperiano
#| echo: true
log10(100)
#| echo: true
exp(2)
#| echo: true
pi
#| echo: true
5 > 4
#| echo: true
6 <= 3
#| echo: true
7 == 7
#| echo: true
8 != 5
#| echo: true
library(medicaldata)
data(covid_testing)
?covid_testing
head(covid_testing)
covid_testing$gender
head(covid_testing$age)
genero <- covid_testing$gender
genero
#| echo: false
countdown_timer(3)
#| echo: false
library(medicaldata)
data(covid_testing)
covid_testing <- covid_testing %>% as_tibble() %>% select(1:5)
covid_testing
class(covid_testing)
#| echo: false
covid_testing <- as.data.frame(covid_testing)
covid_testing
class(covid_testing)
#| echo: false
tipo_vector <- data.frame(
tipo = c("Entero", "Doble", "Caracter", "Lógicos", "Factor"),
tipo_ingles = c("Integer", "Double", "Character", "Logical", "Factor"),
desc = c("Solo números enteros", "Números", "Texto o cadenas ('strings')", "Verdadero o Falso", "Categorías"),
ejem = c("c(1, 2, 3, 4)", "c(1, 2.4, 3.14, 4)", "c('1', 'azul', 'divertido', 'monstruo')", "c(TRUE, FALSE, TRUE, FALSE)", "c('Muy intenso', 'Leve', 'Moderado', 'Leve')")
)
#| echo: false
#| results: asis
kbl(tipo_vector,
col.names = c("<FONT color='#9DA7A7'>Tipo de dato</FONT>", "<FONT color='#9DA7A7'>(En inglés)</FONT>", "<FONT color='#9DA7A7'>Descripción</FONT>", "<FONT color='#9DA7A7'>Ejemplo</FONT>"),
format = "markdown") %>%
kable_styling(font_size = 40,
# bootstrap_options = c("striped", "hover", "condensed"),
full_width = T,
position = "center",
htmltable_class = "lightable-minimal")
