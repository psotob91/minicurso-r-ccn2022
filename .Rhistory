renv::init()
renv::status()
source(here::here("R", "slide-things.R"))
slide_buttons("/slides/sesion1/01-01-bienvenida")
#| echo: false
#| out-width: 100%
knitr::include_graphics(files/img/descargar-html.gif)
#| echo: false
#| out-width: 100%
knitr::include_graphics(files/img/descargar-html.gif)
getwd()
#| echo: false
#| out-width: 100%
knitr::include_graphics(../files/img/descargar-html.gif)
#| echo: false
#| out-width: 100%
knitr::include_graphics("../files/img/descargar-html.gif")
knitr::include_graphics(../slides/sesion1/img/abrir-proyecto.gif)
knitr::include_graphics(../slides/sesion1/img/abrir-proyecto.gif)
knitr::include_graphics("../slides/sesion1/img/abrir-proyecto.gif")
install.packages("medicaldata")
library(tidyverse)
library(glue)
library(knitr)
library(kableExtra)
# withr::with_dir(here::here(), {
#   targets::tar_load(schedule_file)
# })
schedule_raw <- read.csv("data/schedule.csv", sep = ";", encoding = "latin1", na.strings = c("", "NA"))
schedule <- schedule_raw %>%
mutate(group = fct_inorder(group)) %>%
mutate(subgroup = fct_inorder(subgroup)) %>%
mutate(var_title = ifelse(!is.na(content),
glue('<span class="content-title">{title}</span>'),
glue('{title}'))) %>%
mutate(var_deadline = ifelse(!is.na(deadline),
glue('&emsp;&emsp;<small>(enviar antes de {deadline})</small>'),
"")) %>%
mutate(var_content = ifelse(!is.na(content),
glue('<a href="{content}.qmd"><i class="fa-solid fa-book-open-reader fa-lg"></i></a>'),
glue('<font color="#e9ecef"><i class="fa-solid fa-book-open-reader fa-lg"></i></font>'))) %>%
mutate(var_example = ifelse(!is.na(example),
glue('<a href="{example}.qmd"><i class="fa-solid fa-laptop-code fa-lg"></i></a>'),
glue('<font color="#e9ecef"><i class="fa-solid fa-laptop-code fa-lg"></i></font>'))) %>%
mutate(var_assignment = ifelse(!is.na(assignment),
glue('<a href="{assignment}.qmd"><i class="fa-solid fa-pen-ruler fa-lg"></i></a>'),
glue('<font color="#e9ecef"><i class="fa-solid fa-pen-ruler fa-lg"></i></font>'))) %>%
mutate(col_date = ifelse(is.na(date_end),
glue('<strong>{format(date, format = "%d/%m/%y")}</strong>'),
glue('<strong>{format(date, format = "%d/%m/%y")}</strong>–<strong>{format(date_end, format = "%d/%m/%y")}</strong>'))) %>%
mutate(col_title = glue('{var_title}{var_deadline}')) %>%
mutate(col_content = var_content,
col_example = var_example,
col_assignment = var_assignment)
schedule_nested <- schedule %>%
select(group, subgroup,
` ` = col_date, `Título` = col_title, Contenido = col_content,
Ejemplo = col_example, Tarea = col_assignment) %>%
group_by(group) %>%
nest() %>%
mutate(subgroup_count = map(data, ~count(.x, subgroup)),
subgroup_index = map(subgroup_count, ~{
.x %>% pull(n) %>% set_names(.x$subgroup)
}))
show_table <- function(group_id) {
# Add a heading
cat(as.character(paste("\n\n###", schedule_nested$group[[group_id]], "\n\n")))
# Make the table
tbl <- schedule_nested$data[[group_id]] %>%
select(-subgroup) %>%
kbl(escape = FALSE, align = "rlccc", table.attr = 'class="schedule-table"') %>%
kable_styling() %>%
column_spec(1, width = "20%", extra_css = "padding-right: 20px;") %>%
column_spec(2, width = "50%") %>%
column_spec(3:5, width = "10%") %>%
pack_rows(index = schedule_nested$subgroup_index[[group_id]],
label_row_css = "border-bottom: 2px solid #000000;")
cat(tbl)
}
walk(seq(1, nrow(schedule_nested)), ~show_table(.x))
seq(1, nrow(schedule_nested)
seq(1, nrow(schedule_nested))
View(show_table)
library(tidyverse)
library(glue)
library(knitr)
library(kableExtra)
# withr::with_dir(here::here(), {
#   targets::tar_load(schedule_file)
# })
schedule_raw <- read.csv("data/schedule.csv", sep = ";", encoding = "latin1", na.strings = c("", "NA"))
schedule <- schedule_raw %>%
mutate(group = fct_inorder(group)) %>%
mutate(subgroup = fct_inorder(subgroup)) %>%
mutate(var_title = ifelse(!is.na(content),
glue('<span class="content-title">{title}</span>'),
glue('{title}'))) %>%
mutate(var_deadline = ifelse(!is.na(deadline),
glue('&emsp;&emsp;<small>(enviar antes de {deadline})</small>'),
"")) %>%
mutate(var_content = ifelse(!is.na(content),
glue('<a href="{content}.qmd"><i class="fa-solid fa-book-open-reader fa-lg"></i></a>'),
glue('<font color="#e9ecef"><i class="fa-solid fa-book-open-reader fa-lg"></i></font>'))) %>%
mutate(var_example = ifelse(!is.na(example),
glue('<a href="{example}.qmd"><i class="fa-solid fa-laptop-code fa-lg"></i></a>'),
glue('<font color="#e9ecef"><i class="fa-solid fa-laptop-code fa-lg"></i></font>'))) %>%
mutate(var_assignment = ifelse(!is.na(assignment),
glue('<a href="{assignment}.qmd"><i class="fa-solid fa-pen-ruler fa-lg"></i></a>'),
glue('<font color="#e9ecef"><i class="fa-solid fa-pen-ruler fa-lg"></i></font>'))) %>%
mutate(col_date = ifelse(is.na(date_end),
glue('<strong>{format(date, format = "%d/%m/%y")}</strong>'),
glue('<strong>{format(date, format = "%d/%m/%y")}</strong>–<strong>{format(date_end, format = "%d/%m/%y")}</strong>'))) %>%
mutate(col_title = glue('{var_title}{var_deadline}')) %>%
mutate(col_content = var_content,
col_example = var_example,
col_assignment = var_assignment)
schedule_nested <- schedule %>%
select(group, subgroup,
` ` = col_date, `Título` = col_title, Contenido = col_content,
Ejemplo = col_example, Tarea = col_assignment) %>%
group_by(group) %>%
nest() %>%
mutate(subgroup_count = map(data, ~count(.x, subgroup)),
subgroup_index = map(subgroup_count, ~{
.x %>% pull(n) %>% set_names(.x$subgroup)
}))
show_table <- function(group_id) {
# Add a heading
cat(as.character(paste("\n\n###", schedule_nested$group[[group_id]], "\n\n")))
# Make the table
tbl <- schedule_nested$data[[group_id]] %>%
select(-subgroup) %>%
kbl(escape = FALSE, align = "rlccc", table.attr = 'class="schedule-table"') %>%
kable_styling() %>%
column_spec(1, width = "20%", extra_css = "padding-right: 20px;") %>%
column_spec(2, width = "50%") %>%
column_spec(3:5, width = "10%") %>%
pack_rows(index = schedule_nested$subgroup_index[[group_id]],
label_row_css = "border-bottom: 2px solid #000000;")
cat(tbl)
}
walk(seq(1, nrow(schedule_nested)), ~show_table(.x))
#| label: setup
#| message: false
#| warning: false
#| include: false
library(dplyr)
library(tibble)
library(pander)
# https://twitter.com/allison_horst/status/1213275783675822080
knitr::include_graphics("/files/img/syllabus/hosrt_error_tweet.png", error = FALSE)
assignments <- tribble(
~Puntos,   ~Tarea,
2 * 7.5,    "Problem sets (2 × 10)",
2 * 5,      "Asistencia curso presencial(2 * 2.5)"
) %>%
mutate(Porcentaje = Puntos / sum(Puntos),
Porcentaje = scales::percent(Porcentaje))
grading <- tribble(
~Nota, ~Rango, ~Nota, ~Rango,
"A",  "93–100%", "C",  "73–76%",
"A−", "90–92%", "C−", "70–72%",
"B+", "87–89%", "D+", "67–69%",
"B",  "83–86%", "D",  "63–66%",
"B−", "80–82%", "D−", "60–62%",
"C+", "77–79%", "F",  "< 60%"
)
assignments_total <- tibble(Tarea = "Total",
Puntos = sum(assignments$Puntos),
Porcentaje = NA)
bind_rows(assignments, assignments_total) %>%
select(Tarea, Puntos, Porcentaje) %>%
pandoc.table(justify = "lcc", missing = "—")
```{r slides-videos, echo=FALSE, include=FALSE}
